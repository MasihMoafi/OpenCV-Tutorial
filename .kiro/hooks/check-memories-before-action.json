{
  "name": "Memory Check Before Action",
  "description": "Forces agent to query memories before executing commands or making decisions. Prevents ignoring user preferences and past learnings.",
  "trigger": "manual",
  "prompt": "STOP! Before you do ANYTHING, follow this chain of thought:\n\n## Step 1: Identify the Action Type\nWhat is the user asking me to do?\n- [ ] GitHub operation (push, clone, create repo, etc.)\n- [ ] Package installation (pip, npm, etc.)\n- [ ] File creation (docs, configs, etc.)\n- [ ] Command execution\n- [ ] Code changes\n\n## Step 2: Query Memories for Relevant Context\nBased on the action type, search memories:\n\n### Example 1: GitHub Operations\n**Thought Process:** \"User wants to push to GitHub. Let me check if they have preferences about GitHub tools.\"\n**Action:** Query memories with: \"github gh cli git preferences\"\n**Expected Finding:** \"Use 'gh' CLI, NOT 'git' commands. gh handles auth automatically.\"\n**Result:** Use `gh repo create` or `gh pr create`, NOT `git init + git remote + git push`\n\n### Example 2: Package Installation\n**Thought Process:** \"User needs to install a Python package. What's their preferred package manager?\"\n**Action:** Query memories with: \"python package install pip uv preferences\"\n**Expected Finding:** \"Always use 'uv pip install' instead of 'pip install'. Exception: OpenCV first-time install.\"\n**Result:** Use `uv pip install <package>` unless it's OpenCV\n\n### Example 3: Creating Documentation\n**Thought Process:** \"User might need docs. But do they want comprehensive files?\"\n**Action:** Query memories with: \"documentation files comprehensive STATUS GUIDE preferences\"\n**Expected Finding:** \"NEVER create comprehensive documents (STATUS.md, GUIDE.md, etc.)\"\n**Result:** Don't create the file. Ask user if they want a specific, minimal doc instead.\n\n### Example 4: Command Execution\n**Thought Process:** \"About to run a bash command. What are common mistakes?\"\n**Action:** Query memories with: \"command execution errors bash cd path\"\n**Expected Finding:** \"Don't use 'cd' in commands - use 'path' parameter. Check if resources exist first.\"\n**Result:** Use `path` parameter, verify resource doesn't exist before creating\n\n## Step 3: Execute the Correct Action\nNow that you've checked memories:\n1. Follow the preference found in memories\n2. If no relevant memory exists, ASK the user for guidance\n3. If stuck, ASK questions - don't assume\n\n## Step 4: Update Memories if Needed\nDid you learn something new? Save it:\n- New preference discovered\n- Error pattern identified\n- Successful solution found\n\n---\n\n## CRITICAL REMINDERS:\n- **Query memories FIRST, act SECOND**\n- **User's explicit instruction > memories > assumptions**\n- **When in doubt, ASK - don't assume**\n- **Use MCP tools (query_knowledge_base) for long docs**\n- **Context length is limited - use external memory actively**\n\n---\n\nNow proceed with the user's request, having checked memories first."
}